var err = new Error('出错了');
err.message // "出错了"



SyntaxError对象是解析代码时发生的语法错误。
ReferenceError对象是引用一个不存在的变量时发生的错误。
  上面代码对函数console.log的运行结果和this赋值，结果都引发了ReferenceError错误。
  



RangeError对象是一个值超出有效范围时发生的错误。主要有几种情况，
一是数组长度为负数，
二是Number对象的方法参数超出范围，以及函数堆栈超过最大值。



TypeError对象是变量或参数不是预期类型时发生的错误。比如，对字符串、布尔值、数值等原始类型的值使用new命令，就会抛出这种错误，
因为new命令的参数应该是一个构造函数。


URIError对象是 URI 相关函数的参数不正确时抛出的错误，主要涉及encodeURI()、decodeURI()、encodeURIComponent()、
decodeURIComponent()、escape()和unescape()这六个函数。

eval函数没有被正确执行时，会抛出EvalError错误。该错误类型已经不再使用了，只是为了保证与以前代码兼容，才继续保留。

自定义错误 

function UserError(message) {
  this.message = message || '默认信息';
  this.name = 'UserError';
}

UserError.prototype = new Error();
UserError.prototype.constructor = UserError;

new UserError('这是自定义的错误！');
