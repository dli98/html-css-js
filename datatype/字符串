单引号字符串的内部，可以使用双引号。双引号字符串的内部，可以使用单引号。
'key = "value"'
"It's a long journey"
由于 HTML 语言的属性值使用双引号，所以很多项目约定 JavaScript 语言的字符串只使用单引号，本教程遵守这个约定。
当然，只使用双引号也完全可以。重要的是坚持使用一种风格，不要一会使用单引号表示字符串，一会又使用双引号表示。

如果长字符串必须分成多行，可以在每一行的尾部使用反斜杠。与python相同

(function () { /*
line 1
line 2
line 3
*/}).toString().split('\n').slice(1, -1).join('\n')
// "line 1
// line 2
// line 3"

\0 ：null（\u0000）
\b ：后退键（\u0008）
\f ：换页符（\u000C）
\n ：换行符（\u000A）
\r ：回车键（\u000D）
\t ：制表符（\u0009）
\v ：垂直制表符（\u000B）
\' ：单引号（\u0027）
\" ：双引号（\u0022）
\\ ：反斜杠（\u005C）



字符串可以被视为字符数组，因此可以使用数组的方括号运算符，用来返回某个位置的字符（位置编号从0开始）。

但是，字符串与数组的相似性仅此而已。实际上，无法改变字符串之中的单个字符。

length属性返回字符串的长度，该属性也是无法改变的。

JavaScript 使用 Unicode 字符集。JavaScript 引擎内部，所有字符都用 Unicode 表示。

每个字符在 JavaScript 内部都是以16位（即2个字节）的 UTF-16 格式储存。
也就是说，JavaScript 的单位字符长度固定为16位长度，即2个字节。



总结一下，对于码点在U+10000到U+10FFFF之间的字符，JavaScript 总是认为它们是两个字符（length属性为2）。所以处理的时候，必须把这一点考虑在内，
也就是说，JavaScript 返回的字符串长度可能是不正确的。

btoa()：任意值转为 Base64 编码
atob()：Base64 编码转为原来的值

function b64Encode(str) {
  return btoa(encodeURIComponent(str));
}

function b64Decode(str) {
  return decodeURIComponent(atob(str));
}

b64Encode('你好') // "JUU0JUJEJUEwJUU1JUE1JUJE"
b64Decode('JUU0JUJEJUEwJUU1JUE1JUJE') // "你好"
